{"version":3,"file":"static/js/775.d1e73e1d.chunk.js","mappings":"oQACA,EAAuB,uBAAvB,EAAuD,yB,SCoFvD,EA7EiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAaF,EAAAA,EAAAA,MACbG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAWXC,EAAc,SAAAC,GAClB,MAAwBA,EAAIC,OAApBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,MACd,OAAQjB,GACN,IAAK,OACHC,EAAQgB,GACR,MACF,IAAK,QACHd,EAASc,GACT,MACF,IAAK,WACHZ,EAAYY,GACZ,MACF,QACEC,QAAQC,IAAI,4BAEjB,EACD,OACE,iCACE,kBAAMC,UAAWC,EAAUC,SAAU,SAAAP,GAAG,OA3BvB,SAAAA,GACnBA,EAAIQ,iBAEJb,GAASc,EAAAA,EAAAA,IAAS,CAAExB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEjCW,EAAIU,cAAcC,QAClBd,EAAS,YAAa,CAAEe,SAAS,GAClC,CAoB+CC,CAAab,EAAjB,EAAxC,WACE,kBAAOc,QAASvB,EAAhB,mBACA,kBACEwB,QAAShB,EACTiB,KAAK,OACL/B,KAAK,OACLgC,GAAI1B,EACJ2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAON,QAASrB,EAAhB,oBACA,kBACEsB,QAAShB,EACTkB,GAAIxB,EACJuB,KAAK,QACL/B,KAAK,QACLiC,QAAQ,2CACRC,MAAM,uBACNC,UAAQ,KAEV,kBAAON,QAASpB,EAAhB,uBACA,kBACEqB,QAAShB,EACTkB,GAAIvB,EACJsB,KAAK,WACL/B,KAAK,WACLiC,QAAQ,QACRE,UAAQ,EACRD,MAAM,gDAER,mBAAQd,UAAWC,EAAYU,KAAK,SAApC,0BAIF,SAAC,KAAD,CAASK,GAAG,SAAZ,oCAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Register/Register.module.css?88e5","components/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__VD04X\",\"button\":\"Register_button__Pz4po\"};","import { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { register } from 'redux/operations';\nimport css from './Register.module.css';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const nameImputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordId = nanoid();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(register({ name, email, password }));\n\n    evt.currentTarget.reset();\n    navigate('/contacts', { replace: true });\n  };\n\n  const hendleInput = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        console.log('undefenit imput was used');\n    }\n  };\n  return (\n    <>\n      <form className={css.form} onSubmit={evt => handleSubmit(evt)}>\n        <label htmlFor={nameImputId}>Name</label>\n        <input\n          onInput={hendleInput}\n          type=\"text\"\n          name=\"name\"\n          id={nameImputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor={emailInputId}>Email</label>\n        <input\n          onInput={hendleInput}\n          id={emailInputId}\n          type=\"email\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          title=\"Email must contain @\"\n          required\n        />\n        <label htmlFor={passwordId}>Password</label>\n        <input\n          onInput={hendleInput}\n          id={passwordId}\n          type=\"password\"\n          name=\"password\"\n          pattern=\".{8,}\"\n          required\n          title=\"Password must contain 8 or more characters\"\n        />\n        <button className={css.button} type=\"submit\">\n          Register\n        </button>\n      </form>\n      <NavLink to=\"/login\">have accaunt? log in</NavLink>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","nameImputId","nanoid","emailInputId","passwordId","dispatch","useDispatch","navigate","useNavigate","hendleInput","evt","target","value","console","log","className","css","onSubmit","preventDefault","register","currentTarget","reset","replace","handleSubmit","htmlFor","onInput","type","id","pattern","title","required","to"],"sourceRoot":""}