{"version":3,"file":"static/js/231.a6bdc78f.chunk.js","mappings":"gPACA,EAAuB,0BAAvB,EAA0D,4BAA1D,EAAgG,6B,SC+DhG,EAxDoB,SAAAA,GAClB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAChC,GAAgCC,EAAAA,EAAAA,UAASF,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAyBjB,OAvBAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACJV,EAAWY,OAAS,EACtBL,EAMJ,WACE,GAA0B,IAAtBP,EAAWY,OACb,OAAOT,EAET,OAAOA,EAAYU,QACjB,SAAAC,GAAG,OACDA,EAAIC,KAAKC,UAAU,EAAGhB,EAAWY,QAAQK,gBACzCjB,EAAWiB,aAFV,GAIN,CAfeC,IAEZX,EAAYJ,EAEf,GAAE,CAACA,EAAaH,KAcf,eAAImB,UAAWC,EAAf,SACGd,EAASe,KACR,SAAAP,GAAG,OACDA,EAAIQ,KACF,gBAAiBH,UAAWC,EAA5B,UACGN,EAAIC,KADP,KACeD,EAAIS,OAAQ,KACzB,mBACEC,QAAS,kBAAMhB,GAASiB,EAAAA,EAAAA,IAAcX,EAAIQ,IAAjC,EACTH,UAAWC,EAFb,sBAFON,EAAIQ,GAFd,KAeV,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"delete\":\"ContactList_delete__dvPUy\",\"contact\":\"ContactList_contact__0STHS\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = props => {\n  const filterWord = useSelector(selectFilter);\n  const allContacts = useSelector(selectContacts);\n  const [contacts, setContacts] = useState(allContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n\n  useEffect(() => {\n    if (filterWord.length > 0) {\n      setContacts(contactsFilter());\n    } else {\n      setContacts(allContacts);\n    }\n  }, [allContacts, filterWord]);\n\n  function contactsFilter() {\n    if (filterWord.length === 0) {\n      return allContacts;\n    }\n    return allContacts.filter(\n      obj =>\n        obj.name.substring(0, filterWord.length).toLowerCase() ===\n        filterWord.toLowerCase()\n    );\n  }\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(\n        obj =>\n          obj.id && (\n            <li key={obj.id} className={css.contact}>\n              {obj.name}: {obj.number}{' '}\n              <button\n                onClick={() => dispatch(deleteContact(obj.id))}\n                className={css.delete}\n              >\n                Delete\n              </button>\n            </li>\n          )\n      )}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  remuveFromLocalstorage: PropTypes.func,\n};\n\nexport default ContactList;\n"],"names":["props","filterWord","useSelector","selectFilter","allContacts","selectContacts","useState","contacts","setContacts","dispatch","useDispatch","useEffect","fetchContacts","length","filter","obj","name","substring","toLowerCase","contactsFilter","className","css","map","id","number","onClick","deleteContact"],"sourceRoot":""}