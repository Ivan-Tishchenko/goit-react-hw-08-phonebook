"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[190],{2190:function(e,t,a){a.r(t);var n=a(9434),r=a(1634),o=a(184);t.default=function(e){var t=(0,n.I0)();return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("label",{htmlFor:"finder",children:"Find contacts by name"}),(0,o.jsx)("input",{onInput:function(e){var a=e.currentTarget.value;t((0,r.T)(a.trim()))},type:"text",name:"filter",id:"finder",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]})}}}]);
//# sourceMappingURL=190.66bac675.chunk.js.map